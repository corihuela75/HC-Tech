/**
 * Archivo: empleados.pug
 * Descripción: Vista para gestionar empleados (listar, crear, editar, eliminar).
 */


doctype html
html
  head
    meta(charset="utf-8")
    meta(name="viewport" content="width=device-width, initial-scale=1")
    title= titulo || "Gestión de Empleados"
    // El CSS DE EMPRESAS INTEGRADO A CONTINUACIÓN
    style.
      body {
        font-family: Arial, sans-serif;
        margin: 20px;
        background-color: #f9f9f9;
      }
      h1 {
        color: #333;
      }
      a {
        text-decoration: none;
      }
      table {
        width: 100%;
        border-collapse: collapse;
        margin-top: 20px;
        background-color: #fff;
        box-shadow: 0 0 10px rgba(0,0,0,.1);
      }
      th, td {
        border: 1px solid #ddd;
        padding: 10px;
        text-align: left;
      }
      th {
        background-color: #4CAF50;
        color: #fff;
      }
      tr:nth-child(even) {
        background-color: #f2f2f2;
      }
      tr:hover {
        background-color: #e6f7ff;
      }
      button {
        padding: 5px 10px;
        margin-right: 5px;
        border: none;
        border-radius: 4px;
        cursor: pointer;
        font-size: 0.9rem;
      }
      .edit-btn {
        background-color: #2196F3;
        color: #fff;
      }
      .delete-btn {
        background-color: #f44336;
        color: #fff;
      }
      .submit-btn {
        background-color: #4CAF50;
        color: #fff;
        margin-top: 10px;
      }
      form {
        margin-top: 20px;
        padding: 15px;
        background-color: #fff;
        border-radius: 8px;
        box-shadow: 0 0 10px rgba(0,0,0,.1);
        max-width: 500px;
      }
      label {
        display: block;
        margin-top: 10px;
        font-weight: bold;
      }
      input, select {
        width: 100%;
        padding: 8px;
        margin-top: 4px;
        border: 1px solid #ccc;
        border-radius: 4px;
      }

  body
    h1= titulo || "Gestión de Empleados"
    
    // Botón ancla al formulario
    a(href="#form-agregar")
      button.submit-btn(type="button") + Agregar Empleado

    // --- TABLA DE EMPLEADOS (Siempre visible si hay datos) ---
    // NOTA: Si 'empleado' existe (modo edición), 'empleados' suele estar vacío, 
    // pero la estructura HTML se renderiza igual, mostrando el mensaje "No hay registros..." si no hay lista.
    if empleados && empleados.length
      table
        thead
          tr
            th ID
            th Nombre 
            th Apellido 
            th Puesto
            th Ingreso
            th DNI
            th Activo
            th Acciones
        tbody
          each emp in empleados
            tr
              td #{emp.id}
              td #{emp.nombre} 
              td #{emp.apellido} 
              td #{emp.puesto || '-'}
              td #{emp.fecha_ingreso ? emp.fecha_ingreso.toISOString().split('T')[0] : '-'}
              td #{emp.dni || '-'}
              td #{emp.activo ? 'Sí' : 'No'}
              td
                // Enlace de edición (usa el ID y el empresa_id)
                a(href=`/api/empleados/${emp.id}?empresa_id=${emp.empresa_id}`)
                  button.edit-btn(type="button") Editar
                
                // Formulario de eliminación (usa el ID y el empresa_id para el DELETE)
                form(action=`/api/empleados/${emp.id}?empresa_id=${emp.empresa_id}&_method=DELETE` method="POST" style="display:inline")
                  button.delete-btn(type="submit") Eliminar
    else if !empleado
      // Solo mostramos este mensaje si NO estamos en modo edición (empleado existe)
      p No hay registros de empleados para mostrar.

    // --- FORMULARIO CREAR / EDITAR ---
    
    // El formulario de edición se mostrará debajo de la lista
    if empleado
      h1#form-agregar Editar Empleado
      // La acción es PUT usando method-override
      form(action=`/api/empleados/${empleado.id}?empresa_id=${empleado.empresa_id}&_method=PUT` method="POST")
        label(for="nombre") Nombre
        input(type="text" name="nombre" id="nombre" required value=empleado.nombre)

        label(for="apellido") Apellido
        input(type="text" name="apellido" id="apellido" required value=empleado.apellido)

        label(for="dni") DNI
        input(type="text" name="dni" id="dni" value=empleado.dni)

        label(for="puesto") Puesto
        input(type="text" name="puesto" id="puesto" required value=empleado.puesto)

        label(for="fecha_ingreso") Fecha de Ingreso
        input(type="date" name="fecha_ingreso" id="fecha_ingreso" required value=empleado.fecha_ingreso.toISOString().split('T')[0])

        label(for="activo") Activo
        select(name="activo" id="activo")
          option(value="1" selected=empleado.activo) Sí
          option(value="0" selected=!empleado.activo) No

        button.submit-btn(type="submit") Actualizar
        a(href=`/api/empleados?empresa_id=${empleado.empresa_id}`)
          button(type="button") Cancelar
    else
      // El formulario de creación se mostrará debajo de la lista
      h1#form-agregar Nuevo Empleado
      // Acción de creación (POST normal)
      form(action="/api/empleados" method="POST")
        label(for="nombre") Nombre
        input(type="text" name="nombre" id="nombre" required)

        label(for="apellido") Apellido
        input(type="text" name="apellido" id="apellido" required)

        label(for="dni") DNI
        input(type="text" name="dni" id="dni")
        
        label(for="puesto") Puesto
        input(type="text" name="puesto" id="puesto" required)

        label(for="fecha_ingreso") Fecha de Ingreso
        input(type="date" name="fecha_ingreso" id="fecha_ingreso" required)

        label(for="activo") Activo
        select(name="activo" id="activo")
          option(value="1") Sí
          option(value="0" selected) No

        button.submit-btn(type="submit") Guardar